* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Courier New", monospace;
  background: #ecddad;
  /* i used the help of a generator to make this, i am not fully sure how it works
  but from my understanding the gradiernt combine with the other two work to create the hatched cross
  grid back texture that is faintly visible */
  background-image: radial-gradient(
      circle at 20% 50%,
      rgba(120, 119, 108, 0.2) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(160, 154, 140, 0.15) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 40% 80%,
      rgba(180, 174, 160, 0.1) 0%,
      transparent 50%
    );
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  color: #2c2c2c;
}

.selection-container {
  background-color: #e5d9b1;
  border: 4px solid transparent;
  /* using a technique i discovered online, and some clever photoshop work i am able to 
  use some images as borders for the boxes, i am really glad i learnt and spent the time to work this out
  as it really helps with my aesthetic and style i am going for */
  border-image-source: url("img/parchb2.png");
  border-image-slice: 60;
  border-image-width: 60px;
  border-image-outset: 10px;
  padding: 35px;
  width: 90vw;
  max-width: 1200px;
  height: 80vh;
  display: flex;
  align-items: center;
  gap: 25px;
  position: relative;
  box-shadow: 10px 10px 20px rgba(44, 44, 44, 0.25);
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    rgba(44, 44, 44, 0.02) 10px,
    rgba(44, 44, 44, 0.02) 11px
  );
}
/* next set of code is for th ebuttons */
.arrow-btn {
  background: #d3c184;
  border: 3px solid #2c2c2c;
  border-radius: 1px;
  width: 70px;
  height: 70px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.15s ease-out;
  position: relative;
  overflow: visible;
  box-shadow: 3px 3px 0px rgba(44, 44, 44, 0.2);
}

.arrow-btn::before {
  content: "";
  position: absolute;
  top: -3px;
  left: -3px;
  right: -3px;
  bottom: -3px;
  background: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 2px,
    rgba(44, 44, 44, 0.08) 2px,
    rgba(44, 44, 44, 0.08) 3px
  );
  z-index: -1;
}

/* make it slightly darken on hover, ive done this so that the click and hover medium is
better represented for the brief */
.arrow-btn:hover {
  background: #f0e9d2;
  transform: translate(-3px, -3px);
  box-shadow: 6px 6px 0px rgba(44, 44, 44, 0.3);
}

/* this is for the animation clicking the arrows making them move
i feel the way ive set this up gives it an almsot 3D look to it */
.arrow-btn:active {
  transform: translate(0px, 0px);
  box-shadow: 2px 2px 0px rgba(44, 44, 44, 0.3);
}

.arrow {
  width: 0;
  height: 0;
  transition: all 0.2s ease;
}

.arrow-left {
  border-top: 12px solid transparent;
  border-bottom: 12px solid transparent;
  border-right: 20px solid #2c2c2c;
  filter: drop-shadow(1px 1px 0px rgba(44, 44, 44, 0.2));
}

.arrow-right {
  border-top: 12px solid transparent;
  border-bottom: 12px solid transparent;
  border-left: 20px solid #2c2c2c;
  filter: drop-shadow(1px 1px 0px rgba(44, 44, 44, 0.2));
}

/* this is for the big box sorrounding the whole centre
display, for the stats and the images */
.character-display {
  flex: 1;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  border: 4px solid transparent;
  /* once again using the image as a border technique, this uses transparent images */
  border-image-source: url("img/parchb2.png");
  border-image-slice: 60;
  border-image-width: 60px;
  border-image-outset: -60px;
}

/* css styling for the character images, ive added a little animation when switching 
just to make it look more modern and less janky */
.character-image {
  width: 90%;
  height: 90%;
  object-fit: contain;
  transition: opacity 0.3s ease, transform 0.3s ease;
  opacity: 0;
  transform: scale(0.95);
  filter: contrast(1.1) brightness(1.05) grayscale(0.1) sepia(0.15);
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    rgba(44, 44, 44, 0.02) 10px,
    rgba(44, 44, 44, 0.02) 11px
  );
}

.character-image.active {
  opacity: 1;
  transform: scale(1);
}
/* for the character info ive done a similar thing to the other boxes, however
i decieded to use a different parchemnet image to add some variety*/
.character-info {
  width: 330px;
  height: 100%;
  border: 3px solid transparent;
  /* second border image */
  border-image-source: url("img/parchb.png");
  border-image-slice: 70;
  border-image-width: 60px;
  border-image-outset: 10;
  padding: 25px;
  color: #2c2c2c;
  display: flex;
  flex-direction: column;
  position: relative;
  overflow-y: hidden;
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 10px,
    rgba(44, 44, 44, 0.02) 10px,
    rgba(44, 44, 44, 0.02) 11px
  );
}

.character-name {
  font-size: 2.1em;
  font-weight: bold;
  color: #2c2c2c;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  position: relative;
}

/* this addes the nice clean bar under the name, this makes it clearer which info is what
and helps to make the names heirachy be higher */
.character-name::after {
  content: "";
  position: absolute;
  bottom: 0px;
  left: 0;
  width: 80%;
  height: 3px;
  background: #2c2c2c;
  overflow: hidden;
}

.character-stats {
  margin-bottom: 20px;
}
/* next few boxes are the code for the stat bars, i deccided to have those rather than text or just numbers,
as i feel it looks cooler and more like a video game */
.stat {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
  padding: 12px 0;
  border-bottom: 1px solid rgba(44, 44, 44, 0.2);
}
.stat:last-child {
  border-bottom: none;
}

.stat-name {
  font-weight: bold;
  color: #2c2c2c;
  text-transform: uppercase;
  font-size: 0.85em;
  letter-spacing: 1px;
}

.stat-bar {
  width: 130px;
  height: 14px;
  background: #e9e2c6;
  border: 2px solid #2c2c2c;
  border-radius: 0;
  overflow: hidden;
  position: relative;
  box-shadow: inset 1px 1px 2px rgba(44, 44, 44, 0.1);
}

.stat-fill {
  height: 100%;
  border-radius: 0;
  transition: width 0.7s cubic-bezier(0.65, 0, 0.35, 1);
  position: relative;
  overflow: hidden;
}

.stat-fill::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: repeating-linear-gradient(
    45deg,
    transparent,
    transparent 1px,
    rgba(255, 255, 255, 0.25) 1px,
    rgba(255, 255, 255, 0.25) 2px,
    transparent 2px,
    transparent 3px,
    rgba(0, 0, 0, 0.05) 3px,
    rgba(0, 0, 0, 0.05) 4px
  );
  opacity: 0.7;
}
/* these are the css for the selectors at the bottom that allow free switching between
the characters and show which one is currently active */
.selector-indicator {
  position: absolute;
  bottom: 15px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
}

.indicator-dot {
  width: 14px;
  height: 14px;
  border-radius: 0;
  background: #e9e2c6;
  border: 2px solid #2c2c2c;
  transition: all 0.2s ease;
  cursor: pointer;
  position: relative;
  box-shadow: 1px 1px 0px rgba(44, 44, 44, 0.2);
}

.indicator-dot::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 5px;
  background: transparent;
  border: 1px solid transparent;
  transform: translate(-50%, -50%);
  transition: all 0.2s ease;
}

.indicator-dot.active {
  background: #d2691e;
  border-color: #a04f10;
}

.indicator-dot.active::before {
  background: #f5efdc;
}

.loading-placeholder {
  font-size: 1.4em;
  color: #3a3a3a;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 1.5px;
}

/* this helps it resize to smaller screens and or a smaller window, however i havent
been able to impliment functionality to a smaller screen */
@media (max-width: 768px) {
  .selection-container {
    flex-direction: column;
    height: auto;
    min-height: 95vh;
    padding: 15px;
    gap: 15px;
    border-width: 4px;
    box-shadow: 6px 6px 0px rgba(44, 44, 44, 0.2);
  }

  .character-display {
    height: 45vh;
    min-height: 280px;
    border-width: 3px;
  }
  .character-display::before {
    top: 6px;
    left: 6px;
    right: 6px;
    bottom: 6px;
    border-width: 1px;
  }

  .character-info {
    width: 100%;
    height: auto;
    min-height: 220px;
    overflow-y: visible;
    padding: 20px;
    border-width: 3px;
  }
  .character-description {
    max-height: 100px;
    font-size: 0.9em;
    padding: 10px;
  }

  .arrow-btn {
    width: 55px;
    height: 55px;
    border-width: 2px;
    box-shadow: 2px 2px 0px rgba(44, 44, 44, 0.2);
  }
  .arrow-btn:hover {
    transform: translate(-2px, -2px);
    box-shadow: 4px 4px 0px rgba(44, 44, 44, 0.25);
  }
  .arrow-left {
    border-top-width: 10px;
    border-bottom-width: 10px;
    border-right-width: 16px;
  }
  .arrow-right {
    border-top-width: 10px;
    border-bottom-width: 10px;
    border-left-width: 16px;
  }
  .character-name {
    font-size: 1.8em;
  }
  .stat-bar {
    width: 100px;
    height: 12px;
  }
  .selector-indicator {
    bottom: 10px;
    gap: 8px;
  }
  .indicator-dot {
    width: 12px;
    height: 12px;
    border-width: 1px;
  }
  .indicator-dot.active::before {
    width: 4px;
    height: 4px;
  }
}
